# Configuration file

##########################################################################################################
# blacklist
#--------------------------------------------------------------------------------------------------------#
# Blacklist various providers
##########################################################################################################

blacklist {
    # List of meta provider classes or packages which are blacklisted.
    #  For example use "org.squiddev.plethora.integration.vanilla.meta."
    #  to disable all vanilla meta providers.
    # 
    #  This only applies to classes registered through @MetaProvider
    S:blacklistMeta <
     >

    # List of methods classes or packages which are blacklisted.
    #  For example use "org.squiddev.plethora.integration.vanilla.methods."
    #  to disable all vanilla methods
    # 
    #  This only applies to classes registered through @Method
    S:blacklistMethods <
     >

    # List of tile entity classes or packages which will not be wrapped
    #  as peripherals. For example use "net.minecraft." to disable wrapping
    #  any vanilla peripheral. This does not blacklist subclasses
    S:blacklistTileEntities <
     >
}


##########################################################################################################
# costsystem
#--------------------------------------------------------------------------------------------------------#
# Some methods have a particular cost: they
#  consume a set amount of fuel from their owner.
#  This level regenerates over time.
# 
#  *Note* These values only apply to the default handler.
#  Other mods may add custom handlers.
##########################################################################################################

costsystem {
    # The fuel level all systems start at
    D:initial=100.0

    # The maximum fuel level an item can have
    D:limit=100.0

    # The amount of fuel regened each tick
    D:regen=10.0
}


testing {
    # Verify generated bytecode
    B:bytecodeVerify=false

    # Show debug messages
    B:debug=false

    # Enable strict loading mode: crash when an error is encountered
    #  when injecting methods
    B:strict=false
}


